@page "/upload"

@using System.IO;
@using Blazor.FileReader;

@inject IFileReaderService fileReader
@inject HttpClient client

<h1>Upload File</h1>

<div class="row">
    <div class="col-4">
        <div class="form-group">
            <input type="file" @ref="inputReference" />
        </div>
        <button @onclick="async () => await UploadFileAsync()"
                class="btn btn-block btn-success">
            Upload File
        </button>
    </div>
</div>
@if (!string.IsNullOrEmpty(message))
{
    <div class="row mt-2">
        <div class="col-12">
            <div class="alert @(hasError?"alert-danger":"alert-success")" role="alert">
                @((MarkupString)message)
            </div>
        </div>
    </div>
}

@code{
    ElementReference inputReference;
    string message = string.Empty;
    bool hasError = false;

    async Task UploadFileAsync()
    {
        message = string.Empty;
        hasError = false;

        var file = (await fileReader.CreateReference(inputReference).EnumerateFilesAsync()).FirstOrDefault();
        if (file == null)
        {
            message = "Please select a transaction file";
            hasError = true;
            return;
        }

        var fileInfo = await file.ReadFileInfoAsync();
        if(fileInfo.Size > 10485760)
        {
            message = "File size should not be greater than 10MB";
            hasError = true;
            return;
        }

        Stream fileStream;
        using (var ms = await file.CreateMemoryStreamAsync((int)fileInfo.Size))
        {
            fileStream = new MemoryStream(ms.ToArray());
        }

        var content = new MultipartFormDataContent();
        content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("form-data");
        content.Add(new StreamContent(fileStream, (int)fileStream.Length), "file", fileInfo.Name);

        var response = await client.PostAsync("api/transactions", content);
        if (response.IsSuccessStatusCode)
        {
            message = "upload success!";
        }
        else
        {
            message = "upload error : <br/>"
                + (await response.Content.ReadAsStringAsync()).Replace(System.Environment.NewLine, "<br/>");
            hasError = true;
        }
    }
}
